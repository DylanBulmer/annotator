name: Docker Image CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/perc-lab/codr
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          cache-from: type=registry,ref=${{ steps.prep.outputs.tags }}
          cache-to: type=inline
          tags: ${{ steps.prep.outputs.tags }}
#   deploy:
#     runs-on: self-hosted
#     needs: build
#     steps:
#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#       - name: Pull image
#         run: docker pull ghcr.io/dylanbulmer/annotator:main
#       - name: Tag image
#         run: docker tag ghcr.io/dylanbulmer/annotator:main localhost:32000/annotator:latest
#       - name: Push image to private registry
#         run: docker push localhost:32000/annotator
#       - name: Re-Deploy image
#         run: cd ~/services/annotator && microk8s.kubectl set image deployment/annotator-prod annotator-prod=localhost:32000/annotator
